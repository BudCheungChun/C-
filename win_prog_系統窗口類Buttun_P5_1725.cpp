#include <windows.h>

//----------P5----------
//----------P6 28行 06:16----------


//---------- Step 02 ----------		>>> 窗口處理函數(自定義,用於處理消息)  <<<


// !!! 調用系統窗口類,不必窗口處理函數 !!!

//---------- Step 02 ----------		>>> 窗口處理函數(自定義,用於處理消息)  <<<
//---------- Step 01 ----------		>>> 入口函數 <<<
//	
int CALLBACK WinMain(
					HINSTANCE hIns, // 當前程序實例句柄
					HINSTANCE hPreIns, // 已廢棄不用,但佔位置,必須標識出來
					LPSTR lpCmdLine, // 命令行參數
					int nCmdShow) { // 窗口的顯示方式
	//---------- Step 03 ----------
	//注冊窗口類(向系統內核寫入數據)    //第二步 注冊窗口類
	// *1) 每個「窗口」都有「窗口類」，
	// *2) 窗口類是包含「窗口信息」的「結構體」
	// *3) 「窗口類」又有「名字」，事前必須注冊到系統

	//窗口類 一開始 在程序中叫「結構體」，存到內核中就叫「窗口類」
	


	// !!! 調用系統窗口類Button, 不必注冊窗口類 !!!
	//----------因調用系統窗口類,而被「省略」的「注冊窗口類」----------
	//---------- Step 03 ----------
	
	//第三步
	//以下為創建一塊內存空間,在裏面存入窗口的各項數據  //名為 : 在內存中創建窗口
	HWND hWnd = CreateWindowEx(//
							0,
							"Button",//系統窗口類名稱"Button",
									//將調用「系統內置窗口類」,
									//生成一個「巨大按鈕」
							"標題欄信息",//標題欄信息
							WS_OVERLAPPEDWINDOW, // -----P6,06:16-----
												 // -----P6,10:33-----
							100, 100, // 窗口在什麼地方出現
							500, 500, // 窗口的 寬、高
							NULL, NULL, hIns, NULL);
	//第一參,第二參,窗口基本風格,在什麼坐標創建窗口,窗口寬與高,無副窗口,無菜單,WinMain第一個參數,最後一個是無意義參數

	//這是一個系統窗口類,窗口類名稱"Button",將調用系統內置窗口類,生成一個「巨大按鈕」

//顯示窗口   //第四步 把窗口顥示出來
	ShowWindow(hWnd, SW_SHOW);
	//hWnd把以上的參數放到ShowWindow中顥示
	//SW_SHOW : 窗口於100,100的位置,500,500的寬高原樣繪製
	UpdateWindow(hWnd);//不調也無所謂,此函數把窗口再畫一次,叫做刷新窗口

	//第五步 消息循環
	//循環獲得消息 //分三個小部1)抓消息2)
	MSG nMsg = { 0 };//這是一個結構體
	while (GetMessage(&nMsg, NULL, 0, 0)) { //從某處抓消息(未講),保存到nMsg結構體的第一個函數中
	//NULL,0,0有何用處未講

		//第六步 處理消息  用最上面 LRESULT CALLBACK WndProc 函數
		TranslateMessage(&nMsg);//抓到消息然後處理消息
		DispatchMessage(&nMsg);//派發消息,把消息傳給派發消息的函數
		//LRESULT CALLBACK WndProc為窗口處理函數,把消息派發給它

	}

	return 0;
}
//---------- Step 01 ----------		>>> 入口函數 <<<
//這是一個系統窗口類,窗口類名稱"Button",將調用系統內置窗口類,生成一個「巨大按鈕」



//
